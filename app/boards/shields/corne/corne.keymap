#include <behaviors.dtsi>
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/outputs.h>

#define rgb_sv &rgb_ug RGB_SAV
#define rgb_hn &rgb_ug RGB_HUI
#define rgb_hp &rgb_ug RGB_HUD
#define rgb_bn &rgb_ug RGB_BRI
#define rgb_bp &rgb_ug RGB_BRD
#define rgb_sn &rgb_ug RGB_SPI
#define rgb_sp &rgb_ug RGB_SPD
#define rgb_en &rgb_ug RGB_EFF
#define rgb_ep &rgb_ug RGB_EFR
#define rgb_tg &rgb_ug RGB_TOG

#define pwr_tg  &ext_power EP_TOG
#define pwr_on  &ext_power EP_ON
#define pwr_off &ext_power EP_OFF
#define pwr_sv  &ext_power EP_SAV

#define xbt_clr &bt BT_CLR
#define xbt_n &bt BT_NXT
#define xbt_p &bt BT_PRV
#define xbt_s0 &bt BT_SEL 0
#define xbt_s1 &bt BT_SEL 1
#define xbt_s2 &bt BT_SEL 2
#define xbt_s3 &bt BT_SEL 3
#define xbt_s4 &bt BT_SEL 4

#define out_b &out OUT_BLE
#define out_u &out OUT_USB

#define df_b0 &to 0
#define df_b1 &to 1

#define DEFAULT 0
#define B1      1
#define L1      2
#define R1      3
#define L2      4
#define R2      5
#define L1R1    6
#define L1L2    7
#define R1R2    8
#define L1R1R2  9


#define TABLALT &bht LALT TAB
#define QUORALT &bht RALT SQT
#define ESCLCTL &mt LCTRL ESCAPE
#define BSPCRCTL &bht RCTRL BSPC
#define ZLGUI &bht LGUI Z
#define SLHRGUI &bht RGUI FSLH

&oled {
    power-domain = <&pd_ext_power>;
};

&led_strip {
    power-domain = <&pd_ext_power>;
};

/ {
    dev_pm_policy_1 {
        compatible = "zmk,dev-pm-policy";
        label = "DEV_PM_POLICY_1";
        device = <&pd_ext_power>;
        auto-off-on-idle;
    };
};

&mt {
    tapping-term-ms = <169>;
};

/ {

    behaviors {
        bht: balanced_hold_tap {
            compatible = "zmk,behavior-hold-tap";
            label = "bht";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <300>;
            flavor = "balanced";
            bindings = <&kp>, <&kp>;
        };
    };
        conditional_layers {
            compatible = "zmk,conditional-layers";
            l1r1 {
                if-layers = <2 3>;
                then-layer = <6>;
            };
            l1l2 {
                if-layers = <2 4>;
                then-layer = <7>;
            };
            r1r2 {
                if-layers = <3 5>;
                then-layer = <8>;
            };
            l1r1r2 {
                if-layers = <2 3 5>;
                then-layer = <9>;
            };
        };


        keymap {
                compatible = "zmk,keymap";
                default_layer { bindings = <
TABLALT    &kp Q      &kp W      &kp E      &kp R      &kp T      /*|*/ &kp Y      &kp U      &kp I      &kp O      &kp P      QUORALT
ESCLCTL    &kp A      &kp S      &kp D      &kp F      &kp G      /*|*/ &kp H      &kp J      &kp K      &kp L      &kp SEMI   BSPCRCTL
&kp LSHFT  ZLGUI      &kp X      &kp C      &kp V      &kp B      /*|*/ &kp N      &kp M      &kp COMMA  &kp DOT    SLHRGUI    &kp RSHFT
                                            &mo L2     &mo L1     &kp SPACE  /*|*/ &kp RET    &mo R1     &mo R2 >; };

                b1_layer { bindings = <
&trans     &trans     &trans     &trans     &trans     &trans     /*|*/ &trans     &trans     &trans     &trans     &trans     &trans
&trans     &trans     &trans     &trans     &trans     &trans     /*|*/ &trans     &trans     &trans     &trans     &trans     &trans
&trans     &kp Z      &trans     &trans     &trans     &trans     /*|*/ &trans     &trans     &trans     &trans     &kp FSLH   &trans
                                            &mo L2     &mo L1     &trans     /*|*/ &trans     &mo R1     &mo R2 >; };

                l1_layer { bindings = <
&trans     &kp LALT   &kp N5     &kp N4     &kp N3     &caps_word /*|*/ &kp PG_UP  &kp HOME   &kp END    &kp PG_DN  &kp INS    &trans
&trans     &kp LCTRL  &kp N2     &kp N1     &kp N0     &kp N9     /*|*/ &kp LEFT   &kp DOWN   &kp UP     &kp RIGHT  &kp DEL    &trans
&trans     &kp LGUI   &kp N8     &kp N7     &kp N6     &trans     /*|*/ &trans     &trans     &trans     &trans     &trans     &trans
                                            &mo L2     &mo L1     &trans     /*|*/ &trans     &mo R1     &mo R2 >; };

                r1_layer { bindings = <
&trans &trans    &kp LT   &kp GRAVE &kp GT    &trans    /*|*/ &kp AT    &kp LBKT &kp MINUS &kp RBKT &trans  &trans
&trans &kp BSLH  &kp LBRC &kp EQUAL &kp RBRC  &kp HASH  /*|*/ &kp UNDER &kp LPAR &kp DQT   &kp RPAR &trans &trans
&trans &kp PRCNT &kp EXCL &kp PLUS  &kp TILDE &kp CARET /*|*/ &kp AMPS  &kp STAR &kp DLLR  &kp PIPE &trans &trans
                             &mo L2 &mo L1 &trans   /*|*/ &trans &mo R1 &mo R2 >; };


                l2_layer { bindings = <
&trans &trans &kp F5 &kp F4 &kp F3  &kp F11 /*|*/ &trans &trans    &trans   &trans   &trans    &trans
&trans &trans &kp F2 &kp F1 &kp F10 &kp F9  /*|*/ &trans &kp LCTRL &kp LALT &kp LGUI &kp LSHFT &trans
&trans &trans &kp F8 &kp F7 &kp F6  &kp F12 /*|*/ &trans &kp RCTRL &kp RALT &kp RGUI &kp RSHFT &trans
                            &mo L2  &mo L1 &trans /*|*/ &trans &mo R1 &mo R2 >; };

                r2_layer { bindings = <
&trans &trans    &trans   &trans   &trans    &trans /*|*/ &trans &trans    &trans   &trans   &trans    &trans
&trans &kp LSHFT &kp LGUI &kp LALT &kp LCTRL &trans /*|*/ &trans &kp LCTRL &kp LALT &kp LGUI &kp LSHFT &trans
&trans &kp RSHFT &kp RGUI &kp RALT &kp RCTRL &trans /*|*/ &trans &kp RCTRL &kp RALT &kp RGUI &kp RSHFT &trans
                            &mo L2 &mo L1 &trans /*|*/ &trans &mo R1 &mo R2 >; };

                l1r1_layer { bindings = <
&trans &trans &kp F5 &kp F4 &kp F3  &kp F11 /*|*/ &trans &trans    &trans   &trans   &trans    &trans
&trans &trans &kp F2 &kp F1 &kp F10 &kp F9  /*|*/ &trans &kp LCTRL &kp LALT &kp LGUI &kp LSHFT &trans
&trans &trans &kp F8 &kp F7 &kp F6  &kp F12 /*|*/ &trans &kp RCTRL &kp RALT &kp RGUI &kp RSHFT &trans
                     &mo L2  &mo L1 &trans  /*|*/ &trans &mo R1 &mo R2 >; };

                l1l2_layer { bindings = <
&bootloader &trans &trans &trans &trans &trans /*|*/ &trans &trans &trans &trans &trans &bootloader
&trans      &trans &trans &trans &trans &trans /*|*/ &trans &trans &trans &trans &trans &trans
&trans      &trans &trans &trans &trans &trans /*|*/ &trans &trans &trans &trans &trans &trans
                          &mo L2 &mo L1 &trans /*|*/ &trans &mo R1 &mo R2 >; };

                r1r2_layer { bindings = <
&bootloader &trans &trans &trans &trans &trans /*|*/ &trans &trans &trans &trans &trans   &bootloader
&trans      &trans &trans &trans &trans &trans /*|*/ &trans &trans &trans &trans &trans   &trans
&trans      &trans &trans &trans &trans &trans /*|*/ &trans &trans &trans &trans &kp FSLH &trans
                          &mo L2 &mo L1 &trans /*|*/ &trans &mo R1 &mo R2 >; };

                l1r1r2_layer { bindings = <
xbt_n rgb_tg &trans &trans &trans &trans  /*|*/  pwr_tg     rgb_sv rgb_bn rgb_sn rgb_hn rgb_en
xbt_p df_b0  df_b1  &trans &trans &trans  /*|*/  pwr_on     pwr_sv rgb_bp rgb_sp rgb_hp rgb_ep
out_b xbt_s0 xbt_s1 xbt_s2 xbt_s3 xbt_s4  /*|*/  pwr_off    rgb_tg &trans &trans &trans &trans
                            &mo L2 &mo L1 xbt_clr /*|*/ out_u  &mo R1     &mo R2 >; };
        };
};
